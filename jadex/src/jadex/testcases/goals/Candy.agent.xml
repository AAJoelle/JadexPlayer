<!--
	<H3>An agent that uses two subsequent plans for achieving the goal of eating candy</H3>

	Example clarifies problem from Brad Dixon's post on 07/27/05.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	name="Candy"
	package="jadex.testcases.goals">

	<imports>
		<import>jadex.testcases.*</import>
	</imports>

	<capabilities>
		<capability name="testcap" file="jadex.planlib.Test"/>
	</capabilities>

	<beliefs>
		<beliefsetref name="reports">
			<concrete ref="testcap.reports"/>
		</beliefsetref>
		<beliefref name="timeout" class="long" exported="true">
			<concrete ref="testcap.timeout"/>
		</beliefref>
		<beliefref name="testcenter" class="jadex.adapter.fipa.AgentIdentifier" exported="true">
			<concrete ref="testcap.testcenter"/>
		</beliefref>
		<belief name="jaropen" class="boolean">
 			<fact>false</fact>
		</belief>
		<belief name="candyeaten" class="boolean">
 			<fact>false</fact>
		</belief>
	</beliefs>

	<goals>
		<achievegoal name="testgoal">
			<targetcondition>
 				$beliefbase.candyeaten
 			</targetcondition>
		</achievegoal>
	</goals>

	<plans>
		<plan name="get_candy">
			<body>new BeliefChangePlan("candyeaten", new Boolean(true))</body>
			<!--<body inline="true">
				System.out.println("Eating candy.");
				getBeliefbase().getBelief("candyeaten").setFact(new Boolean(true));
			</body>-->
			<trigger>
				<goal ref="testgoal"/>
			</trigger>
			<precondition>
				$beliefbase.jaropen
			</precondition>
		</plan>

		<plan name="open_jar">
			<body>new BeliefChangePlan("jaropen", new Boolean(true))</body>
			<!--<body inline="true">
				System.out.println("Opening jar.");
				getBeliefbase().getBelief("jaropen").setFact(new Boolean(true));
			</body>-->
			<trigger>
				<goal ref="testgoal"/>
			</trigger>
			<precondition>
				!$beliefbase.jaropen
			</precondition>
		</plan>
		<plan name="testplan">
			<body class="GenerateGoalPlan"/>
			<!-- <body>new GenerateGoalPlan()</body> -->
		</plan>
	</plans>

	<properties>
		<!-- <property name="logging.level">java.util.logging.Level.INFO</property> -->
	</properties>

	<configurations>
		<configuration name="default">
			<plans>
				<initialplan ref="testplan"/>
			</plans>
		</configuration>
	</configurations>

</agent>
