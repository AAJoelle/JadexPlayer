<!--
	<H3>Test a query goal.</H3>

	The query goal succeeds after all (in)out parameters are written.
	Note, that the plan parameters are mapped to the goal parameters.
	When the plan finishes all these mapped values will be written
	back to the goal causing it to succeed or try again.
-->

<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	name="QueryGoal"
	package="jadex.testcases.goals">

	<capabilities>
		<capability name="testcap" file="jadex.planlib.Test"/>
	</capabilities>

	<beliefs>
		<beliefsetref name="reports">
			<concrete ref="testcap.reports"/>
		</beliefsetref>
		<beliefref name="timeout" class="long" exported="true">
			<concrete ref="testcap.timeout"/>
		</beliefref>
		<beliefref name="testcenter" class="jadex.adapter.fipa.AgentIdentifier" exported="true">
			<concrete ref="testcap.testcenter"/>
		</beliefref>
	</beliefs>

	<goals>
		<querygoal name="testgoal" exclude="never" retrydelay="1000">
 			<parameter name="a" class="String" direction="out"/>
			<parameter name="b" class="String" direction="out"/>
			<parameter name="c" class="String" direction="out"/>
			<parameter name="d" class="String" optional="true"/>
			<parameterset name="outs" class="String">
				 <value>"a"</value>
				 <value>"b"</value>
				 <value>"c"</value>
 			</parameterset>
		</querygoal>
	</goals>

	<plans>
        <plan name="myplan">
			<parameter name="a" class="String">
				<goalmapping ref="testgoal.a"/>
			</parameter>
			<parameter name="b" class="String">
				<goalmapping ref="testgoal.b"/>
			</parameter>
			<parameter name="c" class="String">
				<goalmapping ref="testgoal.c"/>
			</parameter>
			<parameter name="d" class="String">
				<goalmapping ref="testgoal.d"/>
			</parameter>
			<parameterset name="outs" class="String">
				<goalmapping ref="testgoal.outs"/>
			</parameterset>
			<body class="ResultSetterPlan"/>
			<!-- <body>new ResultSetterPlan()</body>-->
			<trigger>
				<goal ref="testgoal"/>
			</trigger>
		</plan>
		<plan name="testplan">
			<body>new GenerateGoalPlan()</body>
		</plan>
	</plans>

	<properties>
		<property name="debugging">false</property>
	</properties>

	<configurations>
		<configuration name="default">
			<plans>
				<initialplan ref="testplan"/>
			</plans>
		</configuration>
	</configurations>

</agent>
