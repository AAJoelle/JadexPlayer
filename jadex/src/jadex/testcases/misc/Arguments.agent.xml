<!--
	<H3>Agent for testing agent arguments.</H3>
	Command-line starting and argument passing can be done in this style:
	a1:jadex.testcases.misc.Arguments(default,arg1=\"juppi\",testcase_cnt=1)
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	name="Arguments"
	package="jadex.testcases.misc">

	<imports>
		<import>jadex.testcases.*</import>
		<import>jadex.adapter.fipa.*</import>
	</imports>

	<capabilities>
		<capability name="testcap" file="jadex.planlib.Test"/>
		<capability name="amscap" file="jadex.planlib.AMS"/>
	</capabilities>

	<beliefs>
		<belief name="arg1" class="String" exported="true">
			<fact>"default"</fact>
		</belief>
		<belief name="arg2" class="Object" exported="true"/>
		<belief name="arg3" class="Integer" exported ="true">
			<fact>new Integer(3)</fact>
		</belief>
		<belief name="arg4" class="boolean" exported="true"/>
	
		<beliefsetref name="reports">
			<concrete ref="testcap.reports"/>
		</beliefsetref>
		
		<beliefref name="testcase_cnt" class="int" exported="true">
			<concrete ref="testcap.testcase_cnt"/>
		</beliefref>
		<beliefref name="timeout" class="long" exported="true">
			<concrete ref="testcap.timeout"/>
		</beliefref>
		<beliefref name="testcenter" class="jadex.adapter.fipa.AgentIdentifier" exported="true">
			<concrete ref="testcap.testcenter"/>
		</beliefref>
	</beliefs>

	<goals>
		<achievegoalref name="ams_create_agent">
			<concrete ref="amscap.ams_create_agent"/>
		</achievegoalref>
	</goals>
	
	<plans>
		<plan name="arguments_plan">
			<body class="ArgumentsPlan"/>
			<!-- <body>new ArgumentsPlan()</body> -->
			<waitqueue>
				<messageevent ref="inform_created"/>
			</waitqueue>
		</plan>
	</plans>
	
	<events>
		<messageevent name="inform_created" type="fipa" direction="receive">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="content" class="String" direction="fixed">
				<value>"worker"</value>
			</parameter>
		</messageevent>
	</events>

	<properties>
		<!-- <property name="logging.level">java.util.logging.Level.INFO</property> -->
		<!--<property name="debugging">false</property> -->
	</properties>

	<configurations>
		<configuration name="default">
			<beliefs>
				<initialbelief ref="arg1">
					<fact>"initial"</fact>
				</initialbelief>
				<initialbelief ref="testcase_cnt">
					<fact>1</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan ref="arguments_plan"/>
			</plans>
		</configuration>
		<configuration name="alternaltive1">
			<beliefs>
				<initialbelief ref="arg1">
					<fact>"initial_alter"</fact>
				</initialbelief>
				<initialbelief ref="testcase_cnt">
					<fact>2</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan ref="arguments_plan"/>
			</plans>
		</configuration>
		<!--<configuration name="alternaltive2">
			<capabilities>
				<initialcapability ref="testcap" configuration="test"/>
			</capabilities>
			<plans>
				<initialplan ref="arguments_plan"/>
			</plans>
		</configuration>-->
	</configurations>
</agent>

