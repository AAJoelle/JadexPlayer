<!--
	<H3>Test initial events (internal and message).</H3>

	Defines an initial message event that is sent to itself.
	Defines an initial internal event on which a plan reacts.

	Uses binding for the initial events.
	Initial values for parameter with binding options override the bindings
	and cause the value to be fixed.
	The agent should send 3 messages as there are 3 possible bindings.
	The agent should dispatch 2 internal events as there are 2 possible bindings
	(the 'param' parameter has an initial value)
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	name="InitialEvent"
	package="jadex.testcases.events">

	<imports>
		<import>jadex.testcases.*</import>
		<import>jadex.adapter.fipa.*</import>
		<import>java.util.logging.Level</import>
	</imports>

	<capabilities>
		<capability name="testcap" file="jadex.planlib.Test"/>
	</capabilities>

	<beliefs>
		<beliefsetref name="reports">
			<concrete ref="testcap.reports"/>
		</beliefsetref>
		<beliefref name="testcase_cnt" class="int">
			<concrete ref="testcap.testcase_cnt"/>
		</beliefref>
		<beliefref name="timeout" class="long" exported="true">
			<concrete ref="testcap.timeout"/>
		</beliefref>
		<beliefref name="testcenter" class="jadex.adapter.fipa.AgentIdentifier" exported="true">
			<concrete ref="testcap.testcenter"/>
		</beliefref>
	</beliefs>

	<plans>
		<plan name="eventhandler">
			<body class="EventHandlerPlan"/>
			<!-- <body>new EventHandlerPlan()</body> -->
			<waitqueue>
				<internalevent ref="ievent"/>
			</waitqueue>
		</plan>
		<plan name="messagereceiver">
			<body class="MessageReceiverPlan"/>
			<!-- <body>new MessageReceiverPlan()</body> -->
			<waitqueue>
				<messageevent ref="just_born_receive"/>
			</waitqueue>
		</plan>
	</plans>

	<events>
		<internalevent name="ievent">
			<parameter name="param" class="String">
				<!--<value>"default value"</value>-->
				<bindingoptions>new String[]{"a", "b", "c"}</bindingoptions>
			</parameter>
			<parameter name="param2" class="String">
				<bindingoptions>new String[]{"1", "2"}</bindingoptions>
			</parameter>
		</internalevent>

		<messageevent name="just_born_send" type="fipa" direction="send">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="content" class="String">
				<!--<value>"hello i am just born :-)"</value>-->
				<bindingoptions>new String[]{"hello_1", "hello_2", "hello_3"}</bindingoptions>
			</parameter>
			<parameterset name="receivers" class="AgentIdentifier">
				<value>$agent.getAgentIdentifier()</value>
			</parameterset>
		</messageevent>

		<messageevent name="just_born_receive" type="fipa" direction="receive">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
	</events>

	<properties>
		<!-- <property name="debugging">true</property>	 -->
		<!-- <property name="logging.level">Level.WARNING</property> -->
	</properties>

	<configurations>
		<configuration name="test">
			<beliefs>
				<initialbelief ref="testcase_cnt">
					<fact>2</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan ref="eventhandler"/>
				<initialplan ref="messagereceiver"/>
			</plans>
			<events>
				<initialinternalevent ref="ievent">
					<parameter ref="param">
						<value>"initial value"</value>
					</parameter>
				</initialinternalevent>
				<initialmessageevent ref="just_born_send" />
			</events>
		</configuration>
	</configurations>

</agent>

