<!--
	<H3>TranslationAgent: Lesson D2.</H3>
	Using an exported belief.
	<H4>Explanation</H4>
	The agent uses the exported dictionary to
	find sysnonyms for an English word.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	name="TranslationD2"
	package="jadex.tutorial">

	<imports>
		<import>java.util.logging.*</import>
		<import>jadex.adapter.fipa.*</import>
		<import>jadex.util.Tuple</import> <!-- Query in FindEnglishSynomymsPlanD2 needs it.-->
	</imports>

	<capabilities>
		<!-- Include the translation capability under the name transcap. -->
		<capability name="transcap" file="TranslationD2"/>
	</capabilities>

	<beliefs>
		<!-- Include a belief which is orininally defined in
			the translation capability. -->
		<beliefsetref name="egwords">
			<concrete ref="transcap.egwords" />
		</beliefsetref>
	</beliefs>
	
	<plans>
		<!-- Passive plan for finding synonyms in the dictionary.
			It uses the locally defined belief set reference egwords. -->
		<plan name="find_synonyms">
			<body class="FindEnglishSynonymsPlanD2"/>
			<!-- <body>new FindEnglishSynonymsPlanD2()</body> -->
			<trigger>
				<messageevent ref="request_findsynonyms"/>
			</trigger>
		</plan>
	</plans>

	<events>
		<!-- Specifies a find synonyms request being all messages with performative
			request and start with a specific string "find_synonyms english". -->
		<messageevent name="request_findsynonyms" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="content-start" class="String" direction="fixed">
				<value>"find_synonyms english"</value>
			</parameter>
		</messageevent>

		<!-- The answer message after success. - ->
		<messageevent name="inform" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
		<!- - The answer message after some error occurred. - ->
		<messageevent name="failure" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.FAILURE</value>
			</parameter>
		</messageevent>-->

		<messageeventref name="inform">
			<concrete ref="transcap.inform"/>
		</messageeventref>
		<messageeventref name="failure">
			<concrete ref="transcap.failure"/>
		</messageeventref>
	</events>

	<properties>
 		<!-- Only log outputs >= level are printed. -->
       <property name="logging.level">Level.INFO</property>
 		<!-- The default parent handler prints out log messages on the console. -->
       <property name="logging.useParentHandlers">true</property>
        <!--<property name="debugging">true</property>-->
    </properties>

</agent>

