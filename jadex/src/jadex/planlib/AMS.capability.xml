<!--
	Capability for agent management system (AMS) functionality.
	Defines some services that should be available on any platform
	(create/search/destroy agents).
-->
<capability xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	abstract="true" 
	package="jadex.planlib"
	name="AMS">

	<imports>
		<import>jadex.runtime.BasicAgentIdentifier</import>
		<import>jadex.adapter.fipa.AMSAgentDescription</import>
		<import>jadex.adapter.fipa.SearchConstraints</import>
		<import>java.util.Map</import>
	</imports>

	<beliefs>
		<!-- The agents managed by the AMS. Is updated automatically only when initialstate 'agentlist' is used. -->
		<beliefset name="agents" class="AMSAgentDescription" exported="true"/>
	</beliefs>

	<goals>
		<!-- Create (and by default start) a new agent on the platform. -->
		<achievegoal name="ams_create_agent" exported="true">
			<!-- The agent type (name/path of agent model). -->
			<parameter name="type" class="String"/>
			<!-- The name of the instance to create. -->
			<parameter name="name" class="String" optional="true"/>
			<!-- The initial agent configuration to use. -->
			<parameter name="configuration" class="String" optional="true"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="AgentIdentifier" optional="true"/> 
			<!-- The identifier of the created agent. -->
			<parameter name="agentidentifier" class="AgentIdentifier" direction="out"/>
			<!-- The arguments for the new agent. -->
			<parameter name="arguments" class="Map" optional="true"/>
			<!-- Flag indicating if the agent should be started after creation. -->
			<parameter name="start" class="boolean">
				<value>true</value>
			</parameter>
		</achievegoal>

		<!-- Start the given agent (only possible when it has previously been created with start=false). -->
		<achievegoal name="ams_start_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="AgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="AgentIdentifier" optional="true"/> 
		</achievegoal>

		<!-- Destroy the given agent. -->
		<achievegoal name="ams_destroy_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="AgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="AgentIdentifier" optional="true"/> 
		</achievegoal>
		
		<!-- Suspend the given agent. -->
		<achievegoal name="ams_suspend_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="AgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="AgentIdentifier" optional="true"/>
			<!-- The possibly changed ams agent description. -->
			<parameter name="agentdescription" class="AMSAgentDescription" direction="out"/>
		</achievegoal>
		
		<!-- Resume the given agent. -->
		<achievegoal name="ams_resume_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="AgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="AgentIdentifier" optional="true"/> 
				<!-- The possibly changed ams agent description. -->
			<parameter name="agentdescription" class="AMSAgentDescription" direction="out"/>
		</achievegoal>

		<!-- Search for agents on the platform. -->
		<achievegoal name="ams_search_agents" exported="true">
			<!-- The template description to search for. -->
			<parameter name="description" class="AMSAgentDescription"/>
			<!-- The search constraints. -->
			<parameter name="constraints" class="SearchConstraints" optional="true"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="AgentIdentifier" optional="true"/> 
			<!-- The search results. -->
			<parameterset name="result" class="AMSAgentDescription" direction="out"/>
		</achievegoal>
		
		<!-- Shutdown the platform. -->
		<achievegoal name="ams_shutdown_platform" exported="true">
 			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="AgentIdentifier" optional="true"/>
		</achievegoal>
	</goals>

	<configurations>
		<!-- Default configuration without maintaining an uptodate agent list. -->
		<configuration name="default"/>
		
		<!-- Configuration containing goals, plans, whatever needed
			 to maintain an uptodate agent list belief. -->
		<configuration name="agentlist"/>
	</configurations>

</capability>
