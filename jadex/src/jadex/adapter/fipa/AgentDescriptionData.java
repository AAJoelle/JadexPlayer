/*
 * AgentDescriptionData.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package jadex.adapter.fipa;

import java.util.ArrayList;
import java.util.List;


/**
 *  Java class for concept AgentDescription of beanynizer_beans_fipa_default ontology.
 */
public abstract class AgentDescriptionData implements java.beans.BeanInfo , java.io.Serializable 
{
	//-------- constants ----------

	//-------- attributes ----------

	/** Attribute for slot languages. */
	protected  List  languages;

	/** Attribute for slot agentidentifier. */
	protected  AgentIdentifier  name;

	/** Attribute for slot ontologies. */
	protected  List  ontologies;

	/** Attribute for slot services. */
	protected  List  services;

	/** Attribute for slot lease-time. */
	protected  java.util.Date  leasetime;

	/** Attribute for slot protocols. */
	protected  List  protocols;

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>AgentDescription</code>.
	 */
	public AgentDescriptionData()  {
		this.languages  = new ArrayList();
		this.ontologies  = new ArrayList();
		this.services  = new ArrayList();
		this.protocols  = new ArrayList();
	}

	//-------- accessor methods --------

	/**
	 *  Get the languages of this AgentDescription.
	 * @return languages
	 */
	public String[]  getLanguages() {
		return (String[])languages.toArray(new String [languages.size()]);
	}

	/**
	 *  Set the languages of this AgentDescription.
	 * @param languages the value to be set
	 */
	public void  setLanguages(String[] languages) {
		this.languages.clear();
		for(int i=0; i<languages.length; i++)
			this.languages.add(languages[i]);
	}

	/**
	 *  Get an languages of this AgentDescription.
	 *  @param idx The index.
	 *  @return languages
	 */
	public String  getLanguage(int idx) {
		return (String)this.languages.get(idx);
	}

	/**
	 *  Set a language to this AgentDescription.
	 *  @param idx The index.
	 *  @param language a value to be added
	 */
	public void  setLanguage(int idx, String language) {
		this.languages.set(idx, language);
	}

	/**
	 *  Add a language to this AgentDescription.
	 *  @param language a value to be removed
	 */
	public void  addLanguage(String language)  {
		this.languages.add(language);
	}

	/**
	 *  Remove a language from this AgentDescription.
	 *  @param language a value to be removed
	 *  @return  True when the languages have changed.
	 */
	public boolean  removeLanguage(String language)  {
		return this.languages.remove(language);
	}


	/**
	 *  Get the agentidentifier of this AgentDescription.
	 * @return agentidentifier
	 */
	public AgentIdentifier  getName() {
		return this.name;
	}

	/**
	 *  Set the agentidentifier of this AgentDescription.
	 * @param name the value to be set
	 */
	public void  setName(AgentIdentifier name) {
		this.name = name;
	}

	/**
	 *  Get the ontologies of this AgentDescription.
	 * @return ontologies
	 */
	public String[]  getOntologies() {
		return (String[])ontologies.toArray(new String [ontologies.size()]);
	}

	/**
	 *  Set the ontologies of this AgentDescription.
	 * @param ontologies the value to be set
	 */
	public void  setOntologies(String[] ontologies) {
		this.ontologies.clear();
		for(int i=0; i<ontologies.length; i++)
			this.ontologies.add(ontologies[i]);
	}

	/**
	 *  Get an ontologies of this AgentDescription.
	 *  @param idx The index.
	 *  @return ontologies
	 */
	public String  getOntology(int idx) {
		return (String)this.ontologies.get(idx);
	}

	/**
	 *  Set a ontology to this AgentDescription.
	 *  @param idx The index.
	 *  @param ontology a value to be added
	 */
	public void  setOntology(int idx, String ontology) {
		this.ontologies.set(idx, ontology);
	}

	/**
	 *  Add a ontology to this AgentDescription.
	 *  @param ontology a value to be removed
	 */
	public void  addOntology(String ontology)  {
		this.ontologies.add(ontology);
	}

	/**
	 *  Remove a ontology from this AgentDescription.
	 *  @param ontology a value to be removed
	 *  @return  True when the ontologies have changed.
	 */
	public boolean  removeOntology(String ontology)  {
		return this.ontologies.remove(ontology);
	}


	/**
	 *  Get the services of this AgentDescription.
	 * @return services
	 */
	public ServiceDescription[]  getServices() {
		return (ServiceDescription[])services.toArray(new ServiceDescription [services.size()]);
	}

	/**
	 *  Set the services of this AgentDescription.
	 * @param services the value to be set
	 */
	public void  setServices(ServiceDescription[] services) {
		this.services.clear();
		for(int i=0; i<services.length; i++)
			this.services.add(services[i]);
	}

	/**
	 *  Get an services of this AgentDescription.
	 *  @param idx The index.
	 *  @return services
	 */
	public ServiceDescription  getService(int idx) {
		return (ServiceDescription)this.services.get(idx);
	}

	/**
	 *  Set a service to this AgentDescription.
	 *  @param idx The index.
	 *  @param service a value to be added
	 */
	public void  setService(int idx, ServiceDescription service) {
		this.services.set(idx, service);
	}

	/**
	 *  Add a service to this AgentDescription.
	 *  @param service a value to be removed
	 */
	public void  addService(ServiceDescription service)  {
		this.services.add(service);
	}

	/**
	 *  Remove a service from this AgentDescription.
	 *  @param service a value to be removed
	 *  @return  True when the services have changed.
	 */
	public boolean  removeService(ServiceDescription service)  {
		return this.services.remove(service);
	}


	/**
	 *  Get the lease-time of this AgentDescription.
	 * @return lease-time
	 */
	public java.util.Date  getLeaseTime() {
		return this.leasetime;
	}

	/**
	 *  Set the lease-time of this AgentDescription.
	 * @param leasetime the value to be set
	 */
	public void  setLeaseTime(java.util.Date leasetime) {
		this.leasetime = leasetime;
	}

	/**
	 *  Get the protocols of this AgentDescription.
	 * @return protocols
	 */
	public String[]  getProtocols() {
		return (String[])protocols.toArray(new String [protocols.size()]);
	}

	/**
	 *  Set the protocols of this AgentDescription.
	 * @param protocols the value to be set
	 */
	public void  setProtocols(String[] protocols) {
		this.protocols.clear();
		for(int i=0; i<protocols.length; i++)
			this.protocols.add(protocols[i]);
	}

	/**
	 *  Get an protocols of this AgentDescription.
	 *  @param idx The index.
	 *  @return protocols
	 */
	public String  getProtocol(int idx) {
		return (String)this.protocols.get(idx);
	}

	/**
	 *  Set a protocol to this AgentDescription.
	 *  @param idx The index.
	 *  @param protocol a value to be added
	 */
	public void  setProtocol(int idx, String protocol) {
		this.protocols.set(idx, protocol);
	}

	/**
	 *  Add a protocol to this AgentDescription.
	 *  @param protocol a value to be removed
	 */
	public void  addProtocol(String protocol)  {
		this.protocols.add(protocol);
	}

	/**
	 *  Remove a protocol from this AgentDescription.
	 *  @param protocol a value to be removed
	 *  @return  True when the protocols have changed.
	 */
	public boolean  removeProtocol(String protocol)  {
		return this.protocols.remove(protocol);
	}


	//-------- bean related methods --------

	/** The property descriptors, constructed on first access. */
	private java.beans.PropertyDescriptor[] pds = null;

	/**
	 *  Get the bean descriptor.
	 *  @return The bean descriptor.
	 */
	public java.beans.BeanDescriptor getBeanDescriptor() {
		return null;
	}

	/**
	 *  Get the property descriptors.
	 *  @return The property descriptors.
	 */
	public java.beans.PropertyDescriptor[] getPropertyDescriptors() {
		if(pds==null) {
			try {
				pds = new java.beans.PropertyDescriptor[]{
					 new java.beans.IndexedPropertyDescriptor("languages", this.getClass(),
						"getLanguages", "setLanguages", "getLanguage", "setLanguage")
					, new java.beans.PropertyDescriptor("name", this.getClass(), "getName", "setName")
					, new java.beans.IndexedPropertyDescriptor("ontologies", this.getClass(),
						"getOntologies", "setOntologies", "getOntology", "setOntology")
					, new java.beans.IndexedPropertyDescriptor("services", this.getClass(),
						"getServices", "setServices", "getService", "setService")
					, new java.beans.PropertyDescriptor("leaseTime", this.getClass(), "getLeaseTime", "setLeaseTime")
					, new java.beans.IndexedPropertyDescriptor("protocols", this.getClass(),
						"getProtocols", "setProtocols", "getProtocol", "setProtocol")
				};
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		}
		return pds;
	}

	/**
	 *  Get the default property index.
	 *  @return The property index.
	 */
	public int getDefaultPropertyIndex() {
		return -1;
	}

	/**
	 *  Get the event set descriptors.
	 *  @return The event set descriptors.
	 */
	public java.beans.EventSetDescriptor[] getEventSetDescriptors() {
		return null;
	}

	/**
	 *  Get the default event index.
	 *  @return The default event index.
	 */
	public int getDefaultEventIndex() {
		return -1;
	}

	/**
	 *  Get the method descriptors.
	 *  @return The method descriptors.
	 */
	public java.beans.MethodDescriptor[] getMethodDescriptors() {
		return null;
	}

	/**
	 *  Get additional bean info.
	 *  @return Get additional bean info.
	 */
	public java.beans.BeanInfo[] getAdditionalBeanInfo() {
		return null;
	}

	/**
	 *  Get the icon.
	 *  @return The icon.
	 */
	public java.awt.Image getIcon(int iconKind) {
		return null;
	}

	/**
	 *  Load the image.
	 *  @return The image.
	 */
	public java.awt.Image loadImage(final String resourceName) {
		try {
			final Class c = getClass();
			java.awt.image.ImageProducer ip = (java.awt.image.ImageProducer)
				java.security.AccessController.doPrivileged(new java.security.PrivilegedAction() {
					public Object run(){
						java.net.URL url;
						if((url = c.getResource(resourceName))==null) {
							return null;
						}
						else {
							try {
								return url.getContent();
							}
							catch(java.io.IOException ioe) {
								return null;
							}
						}
					}
				});
			if(ip==null)
				return null;
			java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
			return tk.createImage(ip);
		}
		catch(Exception ex) {
			return null;
		}
	}

	//-------- additional methods --------

	/**
	 *  Get a string representation of this AgentDescription.
	 *  @return The string representation.
	 */
	public String toString() {
		return "AgentDescription("
           + ")";
	}

}
