/*
 * AMSSearchAgents.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package jadex.adapter.fipa;

import java.util.ArrayList;
import java.util.List;


/**
 *  Java class for concept AMSSearchAgents of beanynizer_beans_fipa_default ontology.
 */
public class AMSSearchAgents	extends AgentAction implements java.beans.BeanInfo 
{
	//-------- constants ----------

	//-------- attributes ----------

	/** Attribute for slot searchconstraints. */
	protected  SearchConstraints  searchconstraints;

	/** Attribute for slot agentdescriptions. */
	protected  List  agentdescriptions;

	/** Attribute for slot agentdescription. */
	protected  AMSAgentDescription  agentdescription;

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>AMSSearchAgents</code>.
	 */
	public AMSSearchAgents()  {
		this.agentdescriptions  = new ArrayList();
	}

	//-------- accessor methods --------

	/**
	 *  Get the searchconstraints of this AMSSearchAgents.
	 * @return searchconstraints
	 */
	public SearchConstraints  getSearchConstraints() {
		return this.searchconstraints;
	}

	/**
	 *  Set the searchconstraints of this AMSSearchAgents.
	 * @param searchconstraints the value to be set
	 */
	public void  setSearchConstraints(SearchConstraints searchconstraints) {
		this.searchconstraints = searchconstraints;
	}

	/**
	 *  Get the agentdescriptions of this AMSSearchAgents.
	 * @return agentdescriptions
	 */
	public AMSAgentDescription[]  getAgentDescriptions() {
		return (AMSAgentDescription[])agentdescriptions.toArray(new AMSAgentDescription [agentdescriptions.size()]);
	}

	/**
	 *  Set the agentdescriptions of this AMSSearchAgents.
	 * @param agentdescriptions the value to be set
	 */
	public void  setAgentDescriptions(AMSAgentDescription[] agentdescriptions) {
		this.agentdescriptions.clear();
		for(int i=0; i<agentdescriptions.length; i++)
			this.agentdescriptions.add(agentdescriptions[i]);
	}

	/**
	 *  Get an agentdescriptions of this AMSSearchAgents.
	 *  @param idx The index.
	 *  @return agentdescriptions
	 */
	public AMSAgentDescription  getAgentdescription(int idx) {
		return (AMSAgentDescription)this.agentdescriptions.get(idx);
	}

	/**
	 *  Set a agentdescription to this AMSSearchAgents.
	 *  @param idx The index.
	 *  @param agentdescription a value to be added
	 */
	public void  setAgentdescription(int idx, AMSAgentDescription agentdescription) {
		this.agentdescriptions.set(idx, agentdescription);
	}

	/**
	 *  Add a agentdescription to this AMSSearchAgents.
	 *  @param agentdescription a value to be removed
	 */
	public void  addAgentdescription(AMSAgentDescription agentdescription)  {
		this.agentdescriptions.add(agentdescription);
	}

	/**
	 *  Remove a agentdescription from this AMSSearchAgents.
	 *  @param agentdescription a value to be removed
	 *  @return  True when the agentdescriptions have changed.
	 */
	public boolean  removeAgentdescription(AMSAgentDescription agentdescription)  {
		return this.agentdescriptions.remove(agentdescription);
	}


	/**
	 *  Get the agentdescription of this AMSSearchAgents.
	 * @return agentdescription
	 */
	public AMSAgentDescription  getAgentDescription() {
		return this.agentdescription;
	}

	/**
	 *  Set the agentdescription of this AMSSearchAgents.
	 * @param agentdescription the value to be set
	 */
	public void  setAgentDescription(AMSAgentDescription agentdescription) {
		this.agentdescription = agentdescription;
	}

	//-------- bean related methods --------

	/** The property descriptors, constructed on first access. */
	private java.beans.PropertyDescriptor[] pds = null;

	/**
	 *  Get the bean descriptor.
	 *  @return The bean descriptor.
	 */
	public java.beans.BeanDescriptor getBeanDescriptor() {
		return null;
	}

	/**
	 *  Get the property descriptors.
	 *  @return The property descriptors.
	 */
	public java.beans.PropertyDescriptor[] getPropertyDescriptors() {
		if(pds==null) {
			try {
				pds = new java.beans.PropertyDescriptor[]{
					 new java.beans.PropertyDescriptor("searchconstraints", this.getClass(), "getSearchConstraints", "setSearchConstraints")
					, new java.beans.IndexedPropertyDescriptor("agentdescriptions", this.getClass(),
						"getAgentDescriptions", "setAgentDescriptions", "getAgentdescription", "setAgentdescription")
					, new java.beans.PropertyDescriptor("agentdescription", this.getClass(), "getAgentDescription", "setAgentDescription")
				};
				java.beans.PropertyDescriptor[] spds = super.getPropertyDescriptors();
				int	l1	= pds.length;
				int	l2	= spds.length;
				Object	res	= java.lang.reflect.Array.newInstance(java.beans.PropertyDescriptor.class, l1+l2);
				System.arraycopy(pds, 0, res, 0, l1);
				System.arraycopy(spds, 0, res, l1, l2);
				pds = (java.beans.PropertyDescriptor[])res;
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		}
		return pds;
	}

	/**
	 *  Get the default property index.
	 *  @return The property index.
	 */
	public int getDefaultPropertyIndex() {
		return -1;
	}

	/**
	 *  Get the event set descriptors.
	 *  @return The event set descriptors.
	 */
	public java.beans.EventSetDescriptor[] getEventSetDescriptors() {
		return null;
	}

	/**
	 *  Get the default event index.
	 *  @return The default event index.
	 */
	public int getDefaultEventIndex() {
		return -1;
	}

	/**
	 *  Get the method descriptors.
	 *  @return The method descriptors.
	 */
	public java.beans.MethodDescriptor[] getMethodDescriptors() {
		return null;
	}

	/**
	 *  Get additional bean info.
	 *  @return Get additional bean info.
	 */
	public java.beans.BeanInfo[] getAdditionalBeanInfo() {
		return null;
	}

	/**
	 *  Get the icon.
	 *  @return The icon.
	 */
	public java.awt.Image getIcon(int iconKind) {
		return null;
	}

	/**
	 *  Load the image.
	 *  @return The image.
	 */
	public java.awt.Image loadImage(final String resourceName) {
		try {
			final Class c = getClass();
			java.awt.image.ImageProducer ip = (java.awt.image.ImageProducer)
				java.security.AccessController.doPrivileged(new java.security.PrivilegedAction() {
					public Object run(){
						java.net.URL url;
						if((url = c.getResource(resourceName))==null) {
							return null;
						}
						else {
							try {
								return url.getContent();
							}
							catch(java.io.IOException ioe) {
								return null;
							}
						}
					}
				});
			if(ip==null)
				return null;
			java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
			return tk.createImage(ip);
		}
		catch(Exception ex) {
			return null;
		}
	}

	//-------- additional methods --------

	/**
	 *  Get a string representation of this AMSSearchAgents.
	 *  @return The string representation.
	 */
	public String toString() {
		return "AMSSearchAgents("
           + ")";
	}

}
