; Fri Dec 16 15:03:05 GMT+01:00 2005
; 
;+ (version "3.1.1")
;+ (build "Build 216")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(multislot system-events
;+		(comment "System events that occurred inside the observed agent.")
		(type INSTANCE)
;+		(allowed-classes SystemEvent)
		(create-accessor read-write))
	(single-slot command
;+		(comment "The command to execute.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot value2
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot scope
;+		(comment "The scope of the element.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot tool-type
;+		(comment "A tool type such as \"tracer\".")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot action-arguments
		(type STRING)
		(create-accessor read-write))
	(single-slot source
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot attribute-name
;+		(comment "The name of the attribute.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot element-name
;+		(comment "The name of the element.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cause
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot element-type
;+		(comment "The type of the element\n(e.g. \"goal\").")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot supported
;+		(comment "True, when the given tool type is supported by the agent.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot index
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot event-types
;+		(comment "The system event types to be propagated to the tool.")
		(type STRING)
		(create-accessor read-write))
	(single-slot event-type
;+		(comment "The system event type.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot action-name
;+		(comment "The name of the operation to invoke.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ToolRequest "Base class for all tool requests\n(management and tool-specific)."
	(is-a AgentAction)
	(role abstract)
	(single-slot tool-type
;+		(comment "A tool type such as \"tracer\".")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ToolSupport "State if a given tool is supported by the queried agent."
	(is-a ToolRequest)
	(role concrete)
	(single-slot supported
;+		(comment "True, when the given tool type is supported by the agent.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Register "Register a tool at an observable agent."
	(is-a ToolRequest)
	(role concrete)
	(multislot event-types
;+		(comment "The system event types to be propagated to the tool.")
		(type STRING)
		(create-accessor read-write)))

(defclass Deregister "Deregister a tool at an observable agent."
	(is-a ToolRequest)
	(role concrete))

(defclass CurrentState "Describes the current state of the observed agent."
	(is-a ToolRequest)
	(role concrete)
	(multislot event-types
;+		(comment "The system event types to be propagated to the tool.")
		(type STRING)
		(create-accessor read-write))
	(multislot system-events
;+		(comment "System events that occurred inside the observed agent.")
		(type INSTANCE)
;+		(allowed-classes SystemEvent)
		(create-accessor read-write)))

(defclass ToolAction "Base class for tool-specific requests."
	(is-a ToolRequest)
	(role abstract))

(defclass ExecuteCommand "Request the agent to execute a command."
	(is-a ToolAction)
	(role concrete)
	(single-slot command
;+		(comment "The command to execute.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ElementAction "An action associated with a runtime element (e.g. a goal)."
	(is-a ToolAction)
	(role concrete)
	(single-slot element-name
;+		(comment "The name of the element.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot element-type
;+		(comment "The type of the element\n(e.g. \"goal\").")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot scope
;+		(comment "The scope of the element.")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass ChangeAttribute "Change an attribute of an element."
	(is-a ElementAction)
	(role concrete)
	(single-slot attribute-name
;+		(comment "The name of the attribute.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot value2
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass PerformAction "Perform an action (i.e. operation) on an element."
	(is-a ElementAction)
	(role concrete)
	(multislot action-arguments
		(type STRING)
		(create-accessor read-write))
	(single-slot action-name
;+		(comment "The name of the operation to invoke.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SystemEvent "Representing a system event that occurred inside the observed agent."
	(is-a USER)
	(role concrete)
	(single-slot source
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot cause
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot value2
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot event-type
;+		(comment "The system event type.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot index
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write)))